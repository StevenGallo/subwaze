<!DOCTYPE html>

  <% include partials/head.ejs %>
  <body>
<% include partials/nav.ejs %>

    <div class="container">
        <div class="section center-align bigCirc">
        <!-- <h1 class="center-align"><%= trains.line %> Train</h1> -->
            <div class="row">
                <a class="btn-floating btn-large waves-effect waves-light <%= trains.color %>" id="bigTrainCircle"><%= trains.line %><i class="material-icons"></i></a>
            </div>
        </div>



        <% if (user !== 'not logged in') { %>
             <% if (favsArr.indexOf(trains.id) === -1) { %>

               <form class="favForm" id="favForm" action="<%= '/user/' + '/favorites/' + trains.id + '?_method=POST' %>" method="POST">
                  <input type="submit" id="addFavButton" value="+ Add to favorites" />
              </form>

            <% } else  { %>
                <p id="favConfirm" class="center">You're following this train!</p>
            <% } %>

        <% } %>

        <p id="favConfirm" class="center"></p>
        <div id="updateForm"></div>
        <p id="mustLogin" class="center"></p>

        <ul class="collection comment_list">
            <% comments.forEach((comment) => { %>

                <li  id="listComm" class="collection-item avatar">
                    <img src="/images/person2.png" alt="" class="circle">
                    <span id="commmentPost" class="title"><%= comment.comment %></span>
                    <p>Posted By : <span id="poster"><%= comment.firstName %></span> <br>
                         <%= moment(comment.updatedAt).fromNow()%>
                    </p>
                    <% if (user.firstName ===  comment.firstName) { %>
                        <div>
                            <a id="pencil" onclick="editForm('<%= trains.id %>', '<%= comment.id %>', '<%= comment.comment %>')" class="secondary-content"><i class="material-icons">edit</i></a>

                            <form id="trash" class="secondary-content" action="<%= '/user/' + trains.id + '/comment/' + comment.id + '/delete' + '?_method=DELETE' %>" method="POST">
                                <input class="submitButton" type="submit" value='&#x2718;' />
                            </form>
                        </div>
                    <% } %>
                </li>

            <% }) %>
        </ul>
          <div onclick="addCommentForm()" class="btn-floating btn-large waves-effect waves-light orange darken-3" id="showComButton"><i class="material-icons">add</i></div>
    </div>

      <script
      src="https://code.jquery.com/jquery-3.1.1.min.js"
      integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8="
      crossorigin="anonymous"></script>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.98.0/js/materialize.min.js"></script>

        <script>
            function editForm (trainsId, id, comment) {
              console.log(comment)
                const updateForm = document.getElementById('updateForm');
                const form = document.createElement('form');
                form.setAttribute('id', 'removeEditForm');
                const input = document.createElement('input');
                input.setAttribute('type', 'text');
                input.setAttribute('value', comment);
                input.setAttribute('name', 'comment');
                input.setAttribute('class', 'joinCenterGroup');
                const submit = document.createElement('input');
                const cancel = document.createElement('button');
                cancel.innerHTML='Cancel';
                submit.setAttribute('type', 'submit');
                submit.setAttribute('class', 'submitButton');
                submit.setAttribute('id', 'saveButton');
                cancel.setAttribute('class', 'submitButton');
                cancel.setAttribute('id', 'cancelButton');
                submit.setAttribute('value', 'Save');
                form.setAttribute('action', `/user/${trainsId}/comment/${id}/edit?_method=PUT`);
                form.setAttribute('method', "POST");
                form.appendChild(input);
                form.appendChild(cancel);
                form.appendChild(submit);
                updateForm.appendChild(form);
                let comments = document.getElementsByClassName('comment_list');
                for (let comment of comments) {
                  comment.classList.add('hidden');
                }
            }
            function addCommentForm () {
               if ('<%= user %>' !== 'not logged in') {
                const updateForm = document.getElementById('updateForm');
                const form = document.createElement('form');
                form.setAttribute('id', 'addCommentForm');
                const input = document.createElement('input');
                input.setAttribute('type', 'text');
                input.setAttribute('name', 'comment');
                input.setAttribute('class', 'joinCenterGroup');
                const submit = document.createElement('input');
                submit.setAttribute('type', 'submit');
                submit.setAttribute('class', 'submitButton');
                submit.setAttribute('id', 'postButton');
                submit.setAttribute('value', 'Post');
                form.setAttribute('action', '/user/trains/<%= trains.id %>/comment');
                form.setAttribute('method', "POST");
                form.appendChild(input);
                form.appendChild(submit);
                updateForm.appendChild(form);
                document.getElementById('showComButton').classList.add('hidden');
                let comments = document.getElementsByClassName('comment_list');
                for (let comment of comments) {
                  comment.classList.add('hidden');
                }
              } else if ('<%= user %>' === 'not logged in') {
              document.getElementById('mustLogin').innerHTML='Must be logged in to add comment';
            }
          }
            function hideEditForm (event) {
                event.preventDefault();
                document.getElementById('editComment').classList.remove('show');
                let comments = document.getElementsByClassName('comment_list');
                for (let comment of comments) {
                  comment.classList.remove('hidden');
                }
            }
            function removeForm (event) {
                const updateForm = document.getElementById('updateForm');
                event.preventDefault();
                const form = document.getElementById('removeEditForm');
                updateForm.removeChild(button);
            }
        </script>

  </body>
</html>
